#pragma checksum "C:\Users\kobe9\source\repos\Xaml-Controls-Gallery\XamlControlsGallery\AllControlsPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "400B251BCB50376910F28FE24A6824F3800EE221C099390FFE4A8FB864D98876"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppUIBasics
{
    partial class AllControlsPage : 
        global::AppUIBasics.ItemsPageBase, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ParallaxView_Source(global::Microsoft.UI.Xaml.Controls.ParallaxView obj, global::Microsoft.UI.Xaml.UIElement value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.UIElement) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.UIElement), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AllControlsPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IAllControlsPage_Bindings
        {
            private global::AppUIBasics.AllControlsPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.GridView obj5;
            private global::Microsoft.UI.Xaml.Controls.ParallaxView obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5ItemsSourceDisabled = false;
            private static bool isobj7SourceDisabled = false;

            private AllControlsPage_obj1_BindingsTracking bindingsTracking;

            public AllControlsPage_obj1_Bindings()
            {
                this.bindingsTracking = new AllControlsPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 63 && columnNumber == 13)
                {
                    isobj5ItemsSourceDisabled = true;
                }
                else if (lineNumber == 80 && columnNumber == 25)
                {
                    isobj7SourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // AllControlsPage.xaml line 53
                        this.obj5 = (Microsoft.UI.Xaml.Controls.GridView)target;
                        break;
                    case 7: // AllControlsPage.xaml line 76
                        this.obj7 = (Microsoft.UI.Xaml.Controls.ParallaxView)target;
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAllControlsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (AppUIBasics.AllControlsPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.AllControlsPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Items(obj.Items, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_itemGridView(obj.itemGridView, phase);
                    }
                }
            }
            private void Update_Items(global::System.Collections.Generic.IEnumerable<global::AppUIBasics.Data.ControlInfoDataItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AllControlsPage.xaml line 53
                    if (!isobj5ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj5, obj, null);
                    }
                }
            }
            private void Update_itemGridView(global::Microsoft.UI.Xaml.Controls.GridView obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AllControlsPage.xaml line 76
                    if (!isobj7SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ParallaxView_Source(this.obj7, obj, null);
                    }
                }
            }
 

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AllControlsPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AllControlsPage_obj1_Bindings> weakRefToBindingObj; 

                public AllControlsPage_obj1_BindingsTracking(AllControlsPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AllControlsPage_obj1_Bindings>(obj);
                }

                public AllControlsPage_obj1_Bindings TryGetBindingObject()
                {
                    AllControlsPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::Microsoft.UI.Xaml.Data.PropertyChangedEventArgs e)
                {
                    AllControlsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AppUIBasics.AllControlsPage obj = sender as global::AppUIBasics.AllControlsPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Items(obj.Items, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Items":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Items(obj.Items, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::AppUIBasics.AllControlsPage obj)
                {
                    AllControlsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::Microsoft.UI.Xaml.Data.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::Microsoft.UI.Xaml.Data.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// GetWeakRefTarget()
        /// </summary>
        private static T GetWeakRefTarget<T>(global::System.WeakReference<T> weakRef) where T : class
        {
            if (weakRef.TryGetTarget(out T weakRefValue))
            {
                return weakRefValue;
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // AllControlsPage.xaml line 25
                {
                    this.LayoutVisualStates = (Microsoft.UI.Xaml.VisualStateGroup)target;
                }
                break;
            case 3: // AllControlsPage.xaml line 26
                {
                    this.WideLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 4: // AllControlsPage.xaml line 38
                {
                    this.NarrowLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 5: // AllControlsPage.xaml line 53
                {
                    this.itemGridView = (Microsoft.UI.Xaml.Controls.GridView)target;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.itemGridView).ContainerContentChanging += this.OnItemGridViewContainerContentChanging;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.itemGridView).ItemClick += this.OnItemGridViewItemClick;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.itemGridView).KeyDown += this.OnItemGridViewKeyDown;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.itemGridView).Loaded += this.OnItemGridViewLoaded;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.itemGridView).SizeChanged += this.OnItemGridViewSizeChanged;
                }
                break;
            case 6: // AllControlsPage.xaml line 99
                {
                    this.pageHeader = (AppUIBasics.PageHeader)target;
                }
                break;
            case 7: // AllControlsPage.xaml line 76
                {
                    this.headerImageView = (Microsoft.UI.Xaml.Controls.ParallaxView)target;
                }
                break;
            case 8: // AllControlsPage.xaml line 91
                {
                    this.smallHeaderText = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                }
                break;
            case 9: // AllControlsPage.xaml line 82
                {
                    this.headerImage = (Microsoft.UI.Xaml.Controls.Image)target;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // AllControlsPage.xaml line 12
                {                    
                    global::AppUIBasics.ItemsPageBase element1 = (global::AppUIBasics.ItemsPageBase)target;
                    AllControlsPage_obj1_Bindings bindings = new AllControlsPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

