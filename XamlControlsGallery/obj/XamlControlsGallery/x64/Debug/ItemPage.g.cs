#pragma checksum "C:\Users\kobe9\source\repos\Xaml-Controls-Gallery\XamlControlsGallery\ItemPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "7424C79C03316014299D58595B9A025214AF6CEAFD915E25E399788650E44B16"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppUIBasics
{
    partial class ItemPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name(global::Microsoft.UI.Xaml.DependencyObject obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                global::Microsoft.UI.Xaml.Automation.AutomationProperties.SetName(obj, value);
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ItemPage_obj24_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IItemPage_Bindings
        {
            private global::System.String dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference<global::Microsoft.UI.Xaml.Controls.HyperlinkButton> obj24;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj26;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj24NameDisabled = false;
            private static bool isobj26TextDisabled = false;

            public ItemPage_obj24_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 198 && columnNumber == 54)
                {
                    isobj24NameDisabled = true;
                }
                else if (lineNumber == 217 && columnNumber == 49)
                {
                    isobj26TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 24: // ItemPage.xaml line 198
                        this.obj24 = new global::System.WeakReference<global::Microsoft.UI.Xaml.Controls.HyperlinkButton>((Microsoft.UI.Xaml.Controls.HyperlinkButton)target);
                        break;
                    case 26: // ItemPage.xaml line 213
                        this.obj26 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (GetWeakRefTarget(this.obj24) as global::Microsoft.UI.Xaml.Controls.HyperlinkButton).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((System.String)item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IItemPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (System.String)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ItemPage.xaml line 198
                    if (!isobj24NameDisabled)
                    {
                        if ((GetWeakRefTarget(this.obj24) as global::Microsoft.UI.Xaml.Controls.HyperlinkButton) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name((GetWeakRefTarget(this.obj24) as global::Microsoft.UI.Xaml.Controls.HyperlinkButton), obj, null);
                        }
                    }
                    // ItemPage.xaml line 213
                    if (!isobj26TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj26, obj, null);
                    }
                }
            }
 
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ItemPage_obj30_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IItemPage_Bindings
        {
            private global::AppUIBasics.Data.ControlInfoDocLink dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference<global::Microsoft.UI.Xaml.Controls.HyperlinkButton> obj30;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj31;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj31TextDisabled = false;

            public ItemPage_obj30_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 168 && columnNumber == 52)
                {
                    isobj31TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 30: // ItemPage.xaml line 167
                        this.obj30 = new global::System.WeakReference<global::Microsoft.UI.Xaml.Controls.HyperlinkButton>((Microsoft.UI.Xaml.Controls.HyperlinkButton)target);
                        break;
                    case 31: // ItemPage.xaml line 168
                        this.obj31 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (GetWeakRefTarget(this.obj30) as global::Microsoft.UI.Xaml.Controls.HyperlinkButton).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((AppUIBasics.Data.ControlInfoDocLink)item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IItemPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (AppUIBasics.Data.ControlInfoDocLink)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.Data.ControlInfoDocLink obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ItemPage.xaml line 168
                    if (!isobj31TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj31, obj, null);
                    }
                }
            }
 
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ItemPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IItemPage_Bindings
        {
            private global::AppUIBasics.ItemPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj14;
            private global::Microsoft.UI.Xaml.Controls.ItemsControl obj22;
            private global::Microsoft.UI.Xaml.Controls.ItemsControl obj28;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj14TextDisabled = false;
            private static bool isobj22ItemsSourceDisabled = false;
            private static bool isobj28ItemsSourceDisabled = false;

            public ItemPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 128 && columnNumber == 21)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 185 && columnNumber == 29)
                {
                    isobj22ItemsSourceDisabled = true;
                }
                else if (lineNumber == 159 && columnNumber == 29)
                {
                    isobj28ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14: // ItemPage.xaml line 123
                        this.obj14 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 22: // ItemPage.xaml line 181
                        this.obj22 = (Microsoft.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    case 28: // ItemPage.xaml line 155
                        this.obj28 = (Microsoft.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IItemPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (AppUIBasics.ItemPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.ItemPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Item(obj.Item, phase);
                    }
                }
            }
            private void Update_Item(global::AppUIBasics.Data.ControlInfoDataItem obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Item_Subtitle(obj.Subtitle, phase);
                        this.Update_Item_RelatedControls(obj.RelatedControls, phase);
                        this.Update_Item_Docs(obj.Docs, phase);
                    }
                }
            }
            private void Update_Item_Subtitle(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ItemPage.xaml line 123
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                }
            }
            private void Update_Item_RelatedControls(global::AppUIBasics.ObservableCollection<global::System.String> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ItemPage.xaml line 181
                    if (!isobj22ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj22, obj, null);
                    }
                }
            }
            private void Update_Item_Docs(global::AppUIBasics.ObservableCollection<global::AppUIBasics.Data.ControlInfoDocLink> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ItemPage.xaml line 155
                    if (!isobj28ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj28, obj, null);
                    }
                }
            }
 
        }
        /// <summary>
        /// GetWeakRefTarget()
        /// </summary>
        private static T GetWeakRefTarget<T>(global::System.WeakReference<T> weakRef) where T : class
        {
            if (weakRef.TryGetTarget(out T weakRefValue))
            {
                return weakRefValue;
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // ItemPage.xaml line 12
                {
                    this.pageRoot = (Microsoft.UI.Xaml.Controls.Page)target;
                }
                break;
            case 2: // ItemPage.xaml line 29
                {
                    this.rootPanel = (Microsoft.UI.Xaml.Controls.Grid)target;
                }
                break;
            case 3: // ItemPage.xaml line 50
                {
                    this.LayoutVisualStates = (Microsoft.UI.Xaml.VisualStateGroup)target;
                }
                break;
            case 4: // ItemPage.xaml line 51
                {
                    this.LargeLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 5: // ItemPage.xaml line 56
                {
                    this.WideLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 6: // ItemPage.xaml line 77
                {
                    this.NarrowLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 7: // ItemPage.xaml line 42
                {
                    this.NormalFrameContent = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 8: // ItemPage.xaml line 43
                {
                    this.WideFrameContent = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 9: // ItemPage.xaml line 105
                {
                    this.svPanel = (Microsoft.UI.Xaml.Controls.ScrollViewer)target;
                }
                break;
            case 10: // ItemPage.xaml line 110
                {
                    this.contentRoot = (Microsoft.UI.Xaml.Controls.Grid)target;
                    ((global::Microsoft.UI.Xaml.Controls.Grid)this.contentRoot).SizeChanged += this.OnContentRootSizeChanged;
                }
                break;
            case 11: // ItemPage.xaml line 112
                {
                    this.contentColumn = (Microsoft.UI.Xaml.Controls.ColumnDefinition)target;
                }
                break;
            case 12: // ItemPage.xaml line 113
                {
                    this.rightMargin = (Microsoft.UI.Xaml.Controls.ColumnDefinition)target;
                }
                break;
            case 13: // ItemPage.xaml line 114
                {
                    this.infoColumn = (Microsoft.UI.Xaml.Controls.ColumnDefinition)target;
                }
                break;
            case 14: // ItemPage.xaml line 123
                {
                    this.subTitleText = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                }
                break;
            case 15: // ItemPage.xaml line 130
                {
                    this.contentFrame = (Microsoft.UI.Xaml.Controls.Frame)target;
                }
                break;
            case 16: // ItemPage.xaml line 132
                {
                    this.seeAlsoPanel = (Microsoft.UI.Xaml.Controls.Grid)target;
                }
                break;
            case 17: // ItemPage.xaml line 150
                {
                    this.DocumentationPanel = (Microsoft.UI.Xaml.Controls.StackPanel)target;
                }
                break;
            case 18: // ItemPage.xaml line 175
                {
                    this.RelatedControlsPanel = (Microsoft.UI.Xaml.Controls.StackPanel)target;
                }
                break;
            case 19: // ItemPage.xaml line 226
                {
                    this.FeedbackPanel = (Microsoft.UI.Xaml.Controls.StackPanel)target;
                }
                break;
            case 20: // ItemPage.xaml line 227
                {
                    this.feedbackHeader = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                }
                break;
            case 21: // ItemPage.xaml line 176
                {
                    this.relatedControlsHeader = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                }
                break;
            case 22: // ItemPage.xaml line 181
                {
                    this.relatedItemsControl = (Microsoft.UI.Xaml.Controls.ItemsControl)target;
                }
                break;
            case 24: // ItemPage.xaml line 198
                {
                    global::Microsoft.UI.Xaml.Controls.HyperlinkButton element24 = (Microsoft.UI.Xaml.Controls.HyperlinkButton)target;
                    ((global::Microsoft.UI.Xaml.Controls.HyperlinkButton)element24).Click += this.OnRelatedControlClick;
                }
                break;
            case 27: // ItemPage.xaml line 151
                {
                    this.docHeader = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                }
                break;
            case 28: // ItemPage.xaml line 155
                {
                    this.DocsList = (Microsoft.UI.Xaml.Controls.ItemsControl)target;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ItemPage.xaml line 12
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    ItemPage_obj1_Bindings bindings = new ItemPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 24: // ItemPage.xaml line 198
                {                    
                    global::Microsoft.UI.Xaml.Controls.HyperlinkButton element24 = (global::Microsoft.UI.Xaml.Controls.HyperlinkButton)target;
                    ItemPage_obj24_Bindings bindings = new ItemPage_obj24_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element24.DataContext);
                    element24.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element24, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element24, bindings);
                }
                break;
            case 30: // ItemPage.xaml line 167
                {                    
                    global::Microsoft.UI.Xaml.Controls.HyperlinkButton element30 = (global::Microsoft.UI.Xaml.Controls.HyperlinkButton)target;
                    ItemPage_obj30_Bindings bindings = new ItemPage_obj30_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element30.DataContext);
                    element30.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element30, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element30, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

