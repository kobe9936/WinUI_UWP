#pragma checksum "C:\Users\kobe9\source\repos\WinUI_UWP\XamlControlsGallery\SettingsPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "696A10FA60636DB4021664BF78E95DE8AF38F13322BF947CE754333B178D247F"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppUIBasics
{
    partial class SettingsPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Documents_Run_Text(global::Microsoft.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingsPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISettingsPage_Bindings
        {
            private global::AppUIBasics.SettingsPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Documents.Run obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7TextDisabled = false;

            public SettingsPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 85 && columnNumber == 26)
                {
                    isobj7TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // SettingsPage.xaml line 85
                        this.obj7 = (Microsoft.UI.Xaml.Documents.Run)target;
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISettingsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (AppUIBasics.SettingsPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.SettingsPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Version(obj.Version, phase);
                    }
                }
            }
            private void Update_Version(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // SettingsPage.xaml line 85
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj7, obj, null);
                    }
                }
            }
 
        }
        /// <summary>
        /// GetWeakRefTarget()
        /// </summary>
        private static T GetWeakRefTarget<T>(global::System.WeakReference<T> weakRef) where T : class
        {
            if (weakRef.TryGetTarget(out T weakRefValue))
            {
                return weakRefValue;
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // SettingsPage.xaml line 14
                {
                    this.WideLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 3: // SettingsPage.xaml line 19
                {
                    this.NarrowLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 4: // SettingsPage.xaml line 29
                {
                    this.contentSV = (Microsoft.UI.Xaml.Controls.ScrollViewer)target;
                }
                break;
            case 5: // SettingsPage.xaml line 43
                {
                    this.ThemePanel = (Microsoft.UI.Xaml.Controls.StackPanel)target;
                }
                break;
            case 6: // SettingsPage.xaml line 87
                {
                    global::Microsoft.UI.Xaml.Controls.Button element6 = (Microsoft.UI.Xaml.Controls.Button)target;
                    ((global::Microsoft.UI.Xaml.Controls.Button)element6).Click += this.OnFeedbackButtonClick;
                }
                break;
            case 8: // SettingsPage.xaml line 54
                {
                    this.soundToggle = (Microsoft.UI.Xaml.Controls.ToggleSwitch)target;
                    ((global::Microsoft.UI.Xaml.Controls.ToggleSwitch)this.soundToggle).Toggled += this.soundToggle_Toggled;
                }
                break;
            case 9: // SettingsPage.xaml line 55
                {
                    this.spatialSoundBox = (Microsoft.UI.Xaml.Controls.CheckBox)target;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.spatialSoundBox).Unchecked += this.spatialSoundBox_Unchecked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.spatialSoundBox).Checked += this.spatialSoundBox_Checked;
                }
                break;
            case 10: // SettingsPage.xaml line 44
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element10 = (Microsoft.UI.Xaml.Controls.RadioButton)target;
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element10).Checked += this.OnThemeRadioButtonChecked;
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element10).KeyDown += this.OnThemeRadioButtonKeyDown;
                }
                break;
            case 11: // SettingsPage.xaml line 45
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element11 = (Microsoft.UI.Xaml.Controls.RadioButton)target;
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element11).Checked += this.OnThemeRadioButtonChecked;
                }
                break;
            case 12: // SettingsPage.xaml line 46
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element12 = (Microsoft.UI.Xaml.Controls.RadioButton)target;
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element12).Checked += this.OnThemeRadioButtonChecked;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // SettingsPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    SettingsPage_obj1_Bindings bindings = new SettingsPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

