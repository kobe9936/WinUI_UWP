#pragma checksum "C:\Users\kobe9\source\repos\WinUI_UWP\XamlControlsGallery\ControlExample.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "C9378E215E71DC30FDA449A020DB74D78A3693992587666ABAF0FC9A2BE2E232"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppUIBasics
{
    partial class ControlExample : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ContentPresenter_HorizontalContentAlignment(global::Microsoft.UI.Xaml.Controls.ContentPresenter obj, global::Microsoft.UI.Xaml.HorizontalAlignment value)
            {
                obj.HorizontalContentAlignment = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(global::Microsoft.UI.Xaml.Controls.ContentPresenter obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ControlExample_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IControlExample_Bindings
        {
            private global::AppUIBasics.ControlExample dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj7;
            private global::Microsoft.UI.Xaml.Controls.ContentPresenter obj12;
            private global::Microsoft.UI.Xaml.Controls.ContentPresenter obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7TextDisabled = false;
            private static bool isobj12HorizontalContentAlignmentDisabled = false;
            private static bool isobj12ContentDisabled = false;
            private static bool isobj13ContentDisabled = false;
            private static bool isobj13VisibilityDisabled = false;

            public ControlExample_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 57 && columnNumber == 81)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 93 && columnNumber == 21)
                {
                    isobj12HorizontalContentAlignmentDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 21)
                {
                    isobj12ContentDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 21)
                {
                    isobj13ContentDisabled = true;
                }
                else if (lineNumber == 106 && columnNumber == 21)
                {
                    isobj13VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // ControlExample.xaml line 57
                        this.obj7 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // ControlExample.xaml line 88
                        this.obj12 = (Microsoft.UI.Xaml.Controls.ContentPresenter)target;
                        break;
                    case 13: // ControlExample.xaml line 97
                        this.obj13 = (Microsoft.UI.Xaml.Controls.ContentPresenter)target;
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IControlExample_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (AppUIBasics.ControlExample)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.ControlExample obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_HeaderText(obj.HeaderText, phase);
                        this.Update_HorizontalContentAlignment(obj.HorizontalContentAlignment, phase);
                        this.Update_Example(obj.Example, phase);
                        this.Update_Options(obj.Options, phase);
                    }
                }
            }
            private void Update_HeaderText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlExample.xaml line 57
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_HorizontalContentAlignment(global::Microsoft.UI.Xaml.HorizontalAlignment obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlExample.xaml line 88
                    if (!isobj12HorizontalContentAlignmentDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_HorizontalContentAlignment(this.obj12, obj);
                    }
                }
            }
            private void Update_Example(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlExample.xaml line 88
                    if (!isobj12ContentDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj12, obj, null);
                    }
                }
            }
            private void Update_Options(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlExample.xaml line 97
                    if (!isobj13ContentDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj13, obj, null);
                    }
                    // ControlExample.xaml line 97
                    if (!isobj13VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj13, (global::Microsoft.UI.Xaml.Visibility)this.LookupConverter("nullToVisibilityConverter").Convert(obj, typeof(global::Microsoft.UI.Xaml.Visibility), null, null));
                    }
                }
            }
 
        }
        /// <summary>
        /// GetWeakRefTarget()
        /// </summary>
        private static T GetWeakRefTarget<T>(global::System.WeakReference<T> weakRef) where T : class
        {
            if (weakRef.TryGetTarget(out T weakRefValue))
            {
                return weakRefValue;
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // ControlExample.xaml line 1
                {
                    this.RootPanel = (Microsoft.UI.Xaml.Controls.UserControl)target;
                }
                break;
            case 2: // ControlExample.xaml line 19
                {
                    this.PopOutStoryboard = (Microsoft.UI.Xaml.Media.Animation.Storyboard)target;
                }
                break;
            case 3: // ControlExample.xaml line 23
                {
                    this.PopInStoryboard = (Microsoft.UI.Xaml.Media.Animation.Storyboard)target;
                }
                break;
            case 4: // ControlExample.xaml line 28
                {
                    this.rootGrid = (Microsoft.UI.Xaml.Controls.Grid)target;
                    ((global::Microsoft.UI.Xaml.Controls.Grid)this.rootGrid).Loaded += this.rootGrid_Loaded;
                }
                break;
            case 5: // ControlExample.xaml line 31
                {
                    this.IntermediateLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 6: // ControlExample.xaml line 36
                {
                    this.PhoneLayout = (Microsoft.UI.Xaml.VisualState)target;
                }
                break;
            case 8: // ControlExample.xaml line 59
                {
                    this.ErrorTextBlock = (Microsoft.UI.Xaml.Controls.RichTextBlock)target;
                }
                break;
            case 9: // ControlExample.xaml line 72
                {
                    this.ExampleContainer = (Microsoft.UI.Xaml.Controls.Grid)target;
                }
                break;
            case 10: // ControlExample.xaml line 118
                {
                    this.XamlPresenter = (Microsoft.UI.Xaml.Controls.ContentPresenter)target;
                    ((global::Microsoft.UI.Xaml.Controls.ContentPresenter)this.XamlPresenter).Loaded += this.XamlPresenter_Loaded;
                }
                break;
            case 11: // ControlExample.xaml line 122
                {
                    this.CSharpPresenter = (Microsoft.UI.Xaml.Controls.ContentPresenter)target;
                    ((global::Microsoft.UI.Xaml.Controls.ContentPresenter)this.CSharpPresenter).Loaded += this.CSharpPresenter_Loaded;
                }
                break;
            case 12: // ControlExample.xaml line 88
                {
                    this.ControlPresenter = (Microsoft.UI.Xaml.Controls.ContentPresenter)target;
                }
                break;
            case 13: // ControlExample.xaml line 97
                {
                    this.OptionsPresenter = (Microsoft.UI.Xaml.Controls.ContentPresenter)target;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlExample.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    ControlExample_obj1_Bindings bindings = new ControlExample_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

