#pragma checksum "C:\Users\kobe9\source\repos\Xaml-Controls-Gallery\XamlControlsGallery\ControlPages\SliderPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "14DC1B72F314DCD830CACA92031A9EE3C245CF625B51F78D0651F92719DEEB46"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppUIBasics.ControlPages
{
    partial class SliderPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SliderPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISliderPage_Bindings
        {
            private global::AppUIBasics.ControlPages.SliderPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj9;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj12;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj14TextDisabled = false;

            private SliderPage_obj1_BindingsTracking bindingsTracking;

            public SliderPage_obj1_Bindings()
            {
                this.bindingsTracking = new SliderPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 60 && columnNumber == 25)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 25)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 25)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 21 && columnNumber == 25)
                {
                    isobj14TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // ControlPages\SliderPage.xaml line 59
                        this.obj7 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // ControlPages\SliderPage.xaml line 46
                        this.obj9 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // ControlPages\SliderPage.xaml line 33
                        this.obj12 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14: // ControlPages\SliderPage.xaml line 20
                        this.obj14 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISliderPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (AppUIBasics.ControlPages.SliderPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_Slider4_Value_M_ToString_757602046(int phase)
            {
                global::System.String result = this.dataRoot.Slider4.Value.ToString();
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 59
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj7, result, null);
                    }
                }
            }

            private void Invoke_Slider3_Value_M_ToString_757602046(int phase)
            {
                global::System.String result = this.dataRoot.Slider3.Value.ToString();
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 46
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj9, result, null);
                    }
                }
            }

            private void Invoke_Slider2_Value_M_ToString_757602046(int phase)
            {
                global::System.String result = this.dataRoot.Slider2.Value.ToString();
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 33
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj12, result, null);
                    }
                }
            }

            private void Invoke_Slider1_Value_M_ToString_757602046(int phase)
            {
                global::System.String result = this.dataRoot.Slider1.Value.ToString();
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 20
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj14, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.ControlPages.SliderPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider4(obj.Slider4, phase);
                        this.Update_Slider3(obj.Slider3, phase);
                        this.Update_Slider2(obj.Slider2, phase);
                        this.Update_Slider1(obj.Slider1, phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_Slider4(global::Microsoft.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Slider4(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider4_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_Slider4_Value(global::System.Double obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_Slider4_Value_M_ToString_757602046(phase);
                }
            }
            private void Update_Slider4_Value_M_ToString_757602046(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj7TextDisabled)
                    {
                        this.PendingFunctionBindings["Slider4_Value_M_ToString_757602046"] = new InvokeFunctionDelegate(this.Invoke_Slider4_Value_M_ToString_757602046); 
                    }
                }
            }
            private void Update_Slider3(global::Microsoft.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Slider3(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider3_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_Slider3_Value(global::System.Double obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_Slider3_Value_M_ToString_757602046(phase);
                }
            }
            private void Update_Slider3_Value_M_ToString_757602046(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj9TextDisabled)
                    {
                        this.PendingFunctionBindings["Slider3_Value_M_ToString_757602046"] = new InvokeFunctionDelegate(this.Invoke_Slider3_Value_M_ToString_757602046); 
                    }
                }
            }
            private void Update_Slider2(global::Microsoft.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Slider2(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider2_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_Slider2_Value(global::System.Double obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_Slider2_Value_M_ToString_757602046(phase);
                }
            }
            private void Update_Slider2_Value_M_ToString_757602046(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj12TextDisabled)
                    {
                        this.PendingFunctionBindings["Slider2_Value_M_ToString_757602046"] = new InvokeFunctionDelegate(this.Invoke_Slider2_Value_M_ToString_757602046); 
                    }
                }
            }
            private void Update_Slider1(global::Microsoft.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Slider1(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider1_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_Slider1_Value(global::System.Double obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_Slider1_Value_M_ToString_757602046(phase);
                }
            }
            private void Update_Slider1_Value_M_ToString_757602046(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj14TextDisabled)
                    {
                        this.PendingFunctionBindings["Slider1_Value_M_ToString_757602046"] = new InvokeFunctionDelegate(this.Invoke_Slider1_Value_M_ToString_757602046); 
                    }
                }
            }
 

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SliderPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<SliderPage_obj1_Bindings> weakRefToBindingObj; 

                public SliderPage_obj1_BindingsTracking(SliderPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SliderPage_obj1_Bindings>(obj);
                }

                public SliderPage_obj1_Bindings TryGetBindingObject()
                {
                    SliderPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_Slider4(null);
                    UpdateChildListeners_Slider3(null);
                    UpdateChildListeners_Slider2(null);
                    UpdateChildListeners_Slider1(null);
                }

                public void DependencyPropertyChanged_Slider4_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.Slider obj = sender as global::Microsoft.UI.Xaml.Controls.Slider;
                        if (obj != null)
                        {
                            bindings.Update_Slider4_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.Slider cache_Slider4 = null;
                private long tokenDPC_Slider4_Value = 0;
                public void UpdateChildListeners_Slider4(global::Microsoft.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_Slider4)
                    {
                        if (cache_Slider4 != null)
                        {
                            cache_Slider4.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, tokenDPC_Slider4_Value);
                            cache_Slider4 = null;
                        }
                        if (obj != null)
                        {
                            cache_Slider4 = obj;
                            tokenDPC_Slider4_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, DependencyPropertyChanged_Slider4_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_Slider3_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.Slider obj = sender as global::Microsoft.UI.Xaml.Controls.Slider;
                        if (obj != null)
                        {
                            bindings.Update_Slider3_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.Slider cache_Slider3 = null;
                private long tokenDPC_Slider3_Value = 0;
                public void UpdateChildListeners_Slider3(global::Microsoft.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_Slider3)
                    {
                        if (cache_Slider3 != null)
                        {
                            cache_Slider3.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, tokenDPC_Slider3_Value);
                            cache_Slider3 = null;
                        }
                        if (obj != null)
                        {
                            cache_Slider3 = obj;
                            tokenDPC_Slider3_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, DependencyPropertyChanged_Slider3_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_Slider2_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.Slider obj = sender as global::Microsoft.UI.Xaml.Controls.Slider;
                        if (obj != null)
                        {
                            bindings.Update_Slider2_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.Slider cache_Slider2 = null;
                private long tokenDPC_Slider2_Value = 0;
                public void UpdateChildListeners_Slider2(global::Microsoft.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_Slider2)
                    {
                        if (cache_Slider2 != null)
                        {
                            cache_Slider2.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, tokenDPC_Slider2_Value);
                            cache_Slider2 = null;
                        }
                        if (obj != null)
                        {
                            cache_Slider2 = obj;
                            tokenDPC_Slider2_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, DependencyPropertyChanged_Slider2_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_Slider1_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.Slider obj = sender as global::Microsoft.UI.Xaml.Controls.Slider;
                        if (obj != null)
                        {
                            bindings.Update_Slider1_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.Slider cache_Slider1 = null;
                private long tokenDPC_Slider1_Value = 0;
                public void UpdateChildListeners_Slider1(global::Microsoft.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_Slider1)
                    {
                        if (cache_Slider1 != null)
                        {
                            cache_Slider1.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, tokenDPC_Slider1_Value);
                            cache_Slider1 = null;
                        }
                        if (obj != null)
                        {
                            cache_Slider1 = obj;
                            tokenDPC_Slider1_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, DependencyPropertyChanged_Slider1_Value);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// GetWeakRefTarget()
        /// </summary>
        private static T GetWeakRefTarget<T>(global::System.WeakReference<T> weakRef) where T : class
        {
            if (weakRef.TryGetTarget(out T weakRefValue))
            {
                return weakRefValue;
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ControlPages\SliderPage.xaml line 17
                {
                    this.Example1 = (AppUIBasics.ControlExample)target;
                }
                break;
            case 3: // ControlPages\SliderPage.xaml line 29
                {
                    this.Example2 = (AppUIBasics.ControlExample)target;
                }
                break;
            case 4: // ControlPages\SliderPage.xaml line 43
                {
                    this.Example3 = (AppUIBasics.ControlExample)target;
                }
                break;
            case 5: // ControlPages\SliderPage.xaml line 55
                {
                    this.Example4 = (AppUIBasics.ControlExample)target;
                }
                break;
            case 6: // ControlPages\SliderPage.xaml line 57
                {
                    this.Slider4 = (Microsoft.UI.Xaml.Controls.Slider)target;
                }
                break;
            case 8: // ControlPages\SliderPage.xaml line 45
                {
                    this.Slider3 = (Microsoft.UI.Xaml.Controls.Slider)target;
                }
                break;
            case 10: // ControlPages\SliderPage.xaml line 30
                {
                    this.Control2 = (Microsoft.UI.Xaml.Controls.StackPanel)target;
                }
                break;
            case 11: // ControlPages\SliderPage.xaml line 31
                {
                    this.Slider2 = (Microsoft.UI.Xaml.Controls.Slider)target;
                }
                break;
            case 13: // ControlPages\SliderPage.xaml line 19
                {
                    this.Slider1 = (Microsoft.UI.Xaml.Controls.Slider)target;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\SliderPage.xaml line 12
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    SliderPage_obj1_Bindings bindings = new SliderPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

