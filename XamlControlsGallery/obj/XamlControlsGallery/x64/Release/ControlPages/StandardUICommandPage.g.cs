#pragma checksum "C:\Users\kobe9\source\repos\Xaml-Controls-Gallery\XamlControlsGallery\ControlPages\StandardUICommandPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "E0D75E5B83CABDFEC10A8462AF4DC558B889EF28774D05A3B9D947CDA7C6CA76"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppUIBasics.ControlPages
{
    partial class StandardUICommandPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name(global::Microsoft.UI.Xaml.DependencyObject obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                global::Microsoft.UI.Xaml.Automation.AutomationProperties.SetName(obj, value);
            }
            public static void Set_Microsoft_UI_Xaml_Controls_SwipeItem_CommandParameter(global::Microsoft.UI.Xaml.Controls.SwipeItem obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_SwipeItem_Command(global::Microsoft.UI.Xaml.Controls.SwipeItem obj, global::Microsoft.UI.Xaml.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::Microsoft.UI.Xaml.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class StandardUICommandPage_obj6_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IStandardUICommandPage_Bindings
        {
            private global::AppUIBasics.ControlPages.ListItemData dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference<global::Microsoft.UI.Xaml.Controls.UserControl> obj6;
            private global::Microsoft.UI.Xaml.Controls.Grid obj7;
            private global::Microsoft.UI.Xaml.Controls.SwipeItem obj12;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj13;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj14;

            public StandardUICommandPage_obj6_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // ControlPages\StandardUICommandPage.xaml line 60
                        this.obj6 = new global::System.WeakReference<global::Microsoft.UI.Xaml.Controls.UserControl>((Microsoft.UI.Xaml.Controls.UserControl)target);
                        break;
                    case 7: // ControlPages\StandardUICommandPage.xaml line 61
                        this.obj7 = (Microsoft.UI.Xaml.Controls.Grid)target;
                        break;
                    case 12: // ControlPages\StandardUICommandPage.xaml line 75
                        this.obj12 = (Microsoft.UI.Xaml.Controls.SwipeItem)target;
                        break;
                    case 13: // ControlPages\StandardUICommandPage.xaml line 79
                        this.obj13 = (Microsoft.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14: // ControlPages\StandardUICommandPage.xaml line 80
                        this.obj14 = (Microsoft.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (GetWeakRefTarget(this.obj6) as global::Microsoft.UI.Xaml.Controls.UserControl).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((AppUIBasics.ControlPages.ListItemData)item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IStandardUICommandPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (AppUIBasics.ControlPages.ListItemData)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.ControlPages.ListItemData obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Text(obj.Text, phase);
                        this.Update_Command(obj.Command, phase);
                    }
                }
            }
            private void Update_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\StandardUICommandPage.xaml line 61
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name(this.obj7, obj, null);
                    // ControlPages\StandardUICommandPage.xaml line 75
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_SwipeItem_CommandParameter(this.obj12, obj, null);
                    // ControlPages\StandardUICommandPage.xaml line 79
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    // ControlPages\StandardUICommandPage.xaml line 80
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj14, obj, null);
                }
            }
            private void Update_Command(global::Microsoft.UI.Xaml.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\StandardUICommandPage.xaml line 75
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_SwipeItem_Command(this.obj12, obj, null);
                    // ControlPages\StandardUICommandPage.xaml line 80
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj14, obj, null);
                }
            }
 
        }
        /// <summary>
        /// GetWeakRefTarget()
        /// </summary>
        private static T GetWeakRefTarget<T>(global::System.WeakReference<T> weakRef) where T : class
        {
            if (weakRef.TryGetTarget(out T weakRefValue))
            {
                return weakRefValue;
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ControlPages\StandardUICommandPage.xaml line 20
                {
                    global::AppUIBasics.ControlExample element2 = (AppUIBasics.ControlExample)target;
                    ((global::AppUIBasics.ControlExample)element2).Loaded += this.ControlExample_Loaded;
                }
                break;
            case 3: // ControlPages\StandardUICommandPage.xaml line 26
                {
                    this.rootGrid = (Microsoft.UI.Xaml.Controls.Grid)target;
                }
                break;
            case 4: // ControlPages\StandardUICommandPage.xaml line 57
                {
                    this.ListViewRight = (Microsoft.UI.Xaml.Controls.ListView)target;
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.ListViewRight).Loaded += this.ListView_Loaded;
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.ListViewRight).ContainerContentChanging += this.ListViewRight_ContainerContentChanging;
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.ListViewRight).SelectionChanged += this.ListView_SelectionChanged;
                }
                break;
            case 6: // ControlPages\StandardUICommandPage.xaml line 60
                {
                    global::Microsoft.UI.Xaml.Controls.UserControl element6 = (Microsoft.UI.Xaml.Controls.UserControl)target;
                    ((global::Microsoft.UI.Xaml.Controls.UserControl)element6).PointerEntered += this.ListViewSwipeContainer_PointerEntered;
                    ((global::Microsoft.UI.Xaml.Controls.UserControl)element6).PointerExited += this.ListViewSwipeContainer_PointerExited;
                }
                break;
            case 15: // ControlPages\StandardUICommandPage.xaml line 49
                {
                    this.DeleteFlyoutItem = (Microsoft.UI.Xaml.Controls.MenuFlyoutItem)target;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 6: // ControlPages\StandardUICommandPage.xaml line 60
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element6 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    StandardUICommandPage_obj6_Bindings bindings = new StandardUICommandPage_obj6_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element6.DataContext);
                    element6.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element6, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element6, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

